# Use a Python base image
FROM python:3.9-slim-buster

# Set environment variables for Python
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1

# Install system-level dependencies required for unstructured to process various file types.
# This is based on the requirements for a full unstructured installation.
RUN apt-get update && apt-get install -y --no-install-recommends \
    # For filetype detection
    libmagic1 \
    # For PDF processing
    poppler-utils \
    # For image processing and OCR
    tesseract-ocr \
    libgl1-mesa-glx \
    libglib2.0-0 \
    # For other document types
    libreoffice \
    pandoc \
    # For building some python packages
    curl \
    gcc \
    g++ \
    unzip \
    && rm -rf /var/lib/apt/lists/*

# Set the working directory in the container
WORKDIR /app

# Copy and install Python requirements
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Unstructured looks for NLTK data in a hardcoded relative path.
# This RUN command downloads the necessary 'punkt' data to the exact location
# the library expects, preventing runtime download errors.
RUN UNSTRUCTURED_NLTK_PATH=/usr/local/lib/python3.9/site-packages/unstructured/nlp/nltk_data && \
    mkdir -p ${UNSTRUCTURED_NLTK_PATH}/tokenizers && \
    curl -L "https://raw.githubusercontent.com/nltk/nltk_data/gh-pages/packages/tokenizers/punkt.zip" -o "${UNSTRUCTURED_NLTK_PATH}/tokenizers/punkt.zip" && \
    unzip "${UNSTRUCTURED_NLTK_PATH}/tokenizers/punkt.zip" -d "${UNSTRUCTURED_NLTK_PATH}/tokenizers/" && \
    rm "${UNSTRUCTURED_NLTK_PATH}/tokenizers/punkt.zip"

# Copy the rest of the application's code
COPY . .

# Expose the port the app runs on
EXPOSE 8001

# Note: The command to run the application is specified in the docker-compose.yml file.